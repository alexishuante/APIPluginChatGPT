context TrafficLight
inv: not(self.requested = true implies
(let CS:Snapshot = self.getCurrentSnapshot() 
in let FS:Set(Snapshot) = CS.getPost() 
in let FSQ:Set(Snapshot) = FS->select(s | self.atSnapshot(s).carLight = #Red) 
in let FSP:Set(Snapshot) = FS->including(CS)->select(s | self.atSnapshot(s).pedLight = #Red) 
in if (FSQ->size()>0) then (if (FSP->size()>0) then (FSQ->exists(s | FSP-(s.getPost()->including(s)) = FS->including(CS)-(s.getPost()->including(s)))) else false endif) else (FSP = FS->including(CS)) endif))

context TrafficLight
inv: not(self.requested = true implies
(let CS:Snapshot = self.getCurrentSnapshot() 
in let FS:Set(Snapshot) = CS.getPost() 
in let FSQ:Set(Snapshot) = FS->select(s | self.atSnapshot(s).carLight = #Red) 
in let FSP:Set(Snapshot) = FS->including(CS)->select(s | self.atSnapshot(s).pedLight = #Red) 
in if (FSQ->size()>0) then (if (FSP->size()>0) then (FSQ->exists(s | FSP-(s.getPost()->including(s)) = FS->including(CS)-(s.getPost()->including(s)))) else false endif) else (FSP = FS->including(CS)) endif))

